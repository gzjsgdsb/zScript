Terminals unused in grammar

   FUNCTION
   NEW
   DELETE
   THROW
   IF
   ELSE
   WHILE
   ASSIGN
   PLUS
   SUB
   MUL
   DIV
   LPAREN
   RPAREN
   SEMI
   LBRACE
   RBRACE
   LBRACKET
   RBRACKET
   COMMA


语法

    0 $accept: start $end

    1 start: %empty
    2      | start ';'
    3      | start statement ';'

    4 statement: VAR IDENTIFIER '=' expression

    5 expression: expression '+' VARIANT
    6           | expression '-' VARIANT
    7           | expression '*' VARIANT
    8           | expression '/' VARIANT
    9           | VARIANT


Terminals, with rules where they appear

$end (0) 0
'*' (42) 7
'+' (43) 5
'-' (45) 6
'/' (47) 8
';' (59) 2 3
'=' (61) 4
error (256)
VAR (258) 4
FUNCTION (259)
NEW (260)
DELETE (261)
THROW (262)
IF (263)
ELSE (264)
WHILE (265)
VARIANT (266) 5 6 7 8 9
IDENTIFIER (267) 4
ASSIGN (268)
PLUS (269)
SUB (270)
MUL (271)
DIV (272)
LPAREN (273)
RPAREN (274)
SEMI (275)
LBRACE (276)
RBRACE (277)
LBRACKET (278)
RBRACKET (279)
COMMA (280)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
start (33)
    on left: 1 2 3, on right: 0 2 3
statement (34)
    on left: 4, on right: 3
expression (35)
    on left: 5 6 7 8 9, on right: 4 5 6 7 8


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  转到状态 1


State 1

    0 $accept: start . $end
    2 start: start . ';'
    3      | start . statement ';'

    $end  shift, and go to state 2
    VAR   shift, and go to state 3
    ';'   shift, and go to state 4

    statement  转到状态 5


State 2

    0 $accept: start $end .

    $default  接受


State 3

    4 statement: VAR . IDENTIFIER '=' expression

    IDENTIFIER  shift, and go to state 6


State 4

    2 start: start ';' .

    $default  reduce using rule 2 (start)


State 5

    3 start: start statement . ';'

    ';'  shift, and go to state 7


State 6

    4 statement: VAR IDENTIFIER . '=' expression

    '='  shift, and go to state 8


State 7

    3 start: start statement ';' .

    $default  reduce using rule 3 (start)


State 8

    4 statement: VAR IDENTIFIER '=' . expression

    VARIANT  shift, and go to state 9

    expression  转到状态 10


State 9

    9 expression: VARIANT .

    $default  reduce using rule 9 (expression)


State 10

    4 statement: VAR IDENTIFIER '=' expression .
    5 expression: expression . '+' VARIANT
    6           | expression . '-' VARIANT
    7           | expression . '*' VARIANT
    8           | expression . '/' VARIANT

    '+'  shift, and go to state 11
    '-'  shift, and go to state 12
    '*'  shift, and go to state 13
    '/'  shift, and go to state 14

    $default  reduce using rule 4 (statement)


State 11

    5 expression: expression '+' . VARIANT

    VARIANT  shift, and go to state 15


State 12

    6 expression: expression '-' . VARIANT

    VARIANT  shift, and go to state 16


State 13

    7 expression: expression '*' . VARIANT

    VARIANT  shift, and go to state 17


State 14

    8 expression: expression '/' . VARIANT

    VARIANT  shift, and go to state 18


State 15

    5 expression: expression '+' VARIANT .

    $default  reduce using rule 5 (expression)


State 16

    6 expression: expression '-' VARIANT .

    $default  reduce using rule 6 (expression)


State 17

    7 expression: expression '*' VARIANT .

    $default  reduce using rule 7 (expression)


State 18

    8 expression: expression '/' VARIANT .

    $default  reduce using rule 8 (expression)
